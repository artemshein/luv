Luv 0.5alpha
============

Luv is Lua (lua.org) MVC web-framework. Luv is open-source and
completely free for both commercial and non-commercial use. Luv current
version has an "alpha" status and not advised to use it on production.

Luv:
- is much faster then any PHP, Ruby, or Python frameworks;
- has simple and flexible API;
- is complete solution for any REST web-service.

Luv requirements:
- mod_rewrite (Apache, LightTPD) or something similar on your web-server
for CGI support;
- datafilter (http://www.daizucms.org/lua/library/datafilter) for MD5 &
SHA1 passwords hashing;
- LuaSQL (www.keplerproject.org/luasql/) with mysql driver for MySQL
support.
- LuaSocket for SCGI support.

Luv includes:
- Table, string and debug extensions;
- Prototype-based OOP;
- Exceptions;
- CGI, SCGI;
- Unit-testing libs;
- Simple & flexible template engine;
- Debugger for FireBug & profiler;
- Fields (with Validators), Models & Forms;
- URLconf (URL to action binding);
- Widgets (representation layer);
- Automatic AdminSite panel.
- Databases:
	- MySQL only in this version;
	- placeholders;
	- DBMS agnostic interface;
	- Models with relations;
	- auto back links for reference fields;
- ... will be much more soon ...

What's new
==========

Version 0.4alpha
----------------
+ More fields, form fields & widgets.
+ TreeModel & NestedSetModel.
+ AdminSite automatic forms & actions (add, edit).
+ Fire debugger for FireBug.
+ Profiler.

Version 0.3alpha [DONE]
----------------
+ Sessions support (only files for now).
+ Form & ModelForm with buttons.
+ CGI GET, POST and cookies support.
+ Contrib.auth package for authorisation and users, groups and rights
management.
+ Automatic reference fields back links for all models.
+ AdminSite basic pages & authorisation.

Version 0.2dev [DONE]
--------------
+ Constraint fields (ManyToOne, OneToMany, ManyToMany, OneToOne);
+ User, UserGroup, GroupRight models for auth module.
+ Id field (default primary key field).
+ createTables and dropTables model methods.
+ insert, update, save, delete and create model methods.
+ createModels, dropModels Luv methods.
+ Web-server API, standalone application-web-server using sockets, SCGI.

Version 0.1dev [DONE]
--------------
+ Basic OOP and exceptions; 
+ CGI interface;
+ Development version of Tamplier template engine;
+ Unit-testing framework;
+ Basic validators and fields for models and forms;
+ Basic MySQL support.

Known bugs
==========
- MySQL connect using LuaSQL is very slow (WinXP SP3, MySQL 5.0.45,
  LuaSQL 2.1.1).

Roadmap
=======

Version 1.0 [Q4 2009 - Q1 2010]
-----------
- PostgreSQL, SQLite, Oracle support.
- Full AdminSite.
- Much more...

Version 0.6alpha [apr-may 2009]
----------------
- Cacher with Memcached support.
- Caching for models (SQL select) and templates.

Version 0.5alpha [apr 2009]
----------------
- AdminSite delete action.
- TreeModel AdminSite actions.

How to install
==============
1. You will need Lua 5.1.x.
	For Ubuntu:
		sudo apt-get install lua5.1
	For Windows:
		Download Lua from http://luabinaries.luaforge.net/download.html
		and install it.
2. You will also need a web-server with mod_rewrite, CGI or SCGI support
(for example Apache with mod_rewrite or LightTPD with mod_rewrite).
3. datafilter library for Lua is required:
	Ubuntu:
		sudo apt-get install liblua5.1-datafilter0
	Windows:
		Get last binaries from
		http://www.daizucms.org/lua/library/datafilter/
4. Get MySQL 5.x server:
	Ubuntu:
		sudo apt-get install mysql-server-5.0
	Windows:
		Download binary from http://dev.mysql.com/downloads/
5. LuaSQL with MySQL support:
	Ubuntu:
		sudo apt-get install liblua5.1-sql-mysql-2
	Windows:
		Download and install binaries from
		http://luaforge.net/frs/?group_id=12
6. Copy Luv files to other lua libraries (often /usr/lib/lua/5.1/) into
luv/ directory (/usr/lib/lua/5.1/luv/).
7. Configure web-server mod_rewrite:
	LightTPD:
		Uncomment "mod_rewrite" in server.modules. Add ".lua" to
		static-file.exclude-extensions, place
------------------------------------------------------------------------
$HTTP["host"] =~ "your host here" {
	url.rewrite = ("^/(?!(css/|images/|js/))" => "/index.lua")
}
------------------------------------------------------------------------
		and (only for CGI)
------------------------------------------------------------------------
cgi.assign = ( ".lua" => "/usr/bin/lua" )
------------------------------------------------------------------------
		somewhere in the config file (lighttpd.conf).

Manual or API reference
=======================
There are no manuals or references to Luv for now. First of all you can
read unittest scripts from tests/ directory for use cases. Second you
can read Luv sample project code (http://github.com/temiy/adspace).
Third you can read Django (djangoproject.com) manuals and references.
Luv is mostly similar in main design ideas with Django. And the last
you also can send me your questions.


Artyom Shein <temiy@aisys.ru>, 2008-2009
